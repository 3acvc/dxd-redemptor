version: "3.9"
services:
  db:
    image: mongo:5.0.7
    container_name: db
    environment:
      MONGO_INITDB_ROOT_USERNAME: 3ac
      MONGO_INITDB_ROOT_PASSWORD: 3ac
    ports:
      - "27017:27017"
    profiles:
      - aggregator
      - full
  contracts:
    container_name: contracts
    build:
      context: .
      dockerfile: ./packages/contracts/Dockerfile
    ports:
      - "8545:8545"
    environment:
      FORK_RPC_ENDPOINT: $FORK_RPC_ENDPOINT
    profiles:
      - contracts
      - aggregator
      - full
  aggregator:
    container_name: aggregator
    build:
      context: .
      dockerfile: ./packages/aggregator/Dockerfile
    ports:
      - "$SERVER_PORT:$SERVER_PORT"
    depends_on:
      - "db"
      - "contracts"
    environment:
      MONGO_URI: $MONGO_URI
      SERVER_HOST: $SERVER_HOST
      SERVER_PORT: $SERVER_PORT
      ETHEREUM_RPC_ENDPOINT: $ETHEREUM_RPC_ENDPOINT
      GNOSIS_RPC_ENDPOINT: $GNOSIS_RPC_ENDPOINT
      WS_ETHEREUM_RPC_ENDPOINT: $WS_ETHEREUM_RPC_ENDPOINT
      WS_GNOSIS_RPC_ENDPOINT: $WS_GNOSIS_RPC_ENDPOINT
      REDEMPTOR_ADDRESS: $REDEMPTOR_ADDRESS
    profiles:
      - aggregator
      - full
  graph-node:
    image: graphprotocol/graph-node
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      - ipfs
      - postgres
    environment:
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'mainnet:$ETHEREUM_RPC_ENDPOINT'
  ipfs:
    image: ipfs/go-ipfs:v0.4.23
    ports:
      - '5001:5001'
  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command: ['postgres', '-cshared_preload_libraries=pg_stat_statements']
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node